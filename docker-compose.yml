version: '3.2'

networks:
  webapp:
    driver: bridge

services:
  nginx:
    container_name: bastion
    image: nginx
    restart: unless-stopped
    depends_on:
      - api
      - frontend
    networks:
      - webapp
    ports:
      - 80:80
    environment:
      - API_PORT=3000
      - API_PATH=/api
      - NGINX_DOMAIN=${DOMAIN:-domain.tld}
      - REACT_PORT=80
      - HOMEPAGE_PORT=80
    volumes:
      - ./production.nginx.conf:/etc/nginx/conf.d/site.template:ro
      - ${LOGS_PATH:-./logs}/bastion:/var/log/nginx
    command: /bin/bash -c "envsubst \"`for v in $$(compgen -v);do printf '$${%s} ' $$v;done`'\" < /etc/nginx/conf.d/site.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

  frontend:
    container_name: frontend
    build: ./apps/frontend
    networks:
      - webapp
    environment:
      - NODE_ENV=production
      - API_URL=http://${DOMAIN:-domain.tld}/api
    volumes:
      - /usr/src/app/node_modules
      - ${LOGS_PATH:-./logs}/frontend:/var/log/nginx
  
  api:
    container_name: api
    build: ./apps/api
    depends_on:
      - mongo
    networks:
      - webapp
    environment:
      - NODE_ENV=production
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
      - MONGO_DATABASE=production
      - SECRETS=my,super,secrets
      - API_PORT=3000
      - DOMAIN=${DOMAIN:-domain.tld}
    volumes:
      - /usr/src/app/node_modules
      - ./wait-for.sh:/usr/wait-for.sh
    command: sh -c "/usr/wait-for.sh mongo:27017 -- node build/index.js"
  
  homepage:
    container_name: homepage
    build: ./apps/homepage
    networks:
      - webapp
    volumes:
      - ${LOGS_PATH:-./logs}/homepage:/var/log/nginx
  
  mongo:
    container_name: mongo
    image: mongo:4.2.1
    networks:
      - webapp
    # ports:
    #   - "27017:27017"
    restart: unless-stopped
    volumes:
      - ${MONGO_PATH:-./data/mongo}:/data/db
